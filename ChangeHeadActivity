package com.example.user.chatsystem1;

import android.content.ContentResolver;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.media.Image;
import android.net.Uri;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.example.user.chatsystem1.FormatTools.FormatTools;
import com.mysql.jdbc.StringUtils;

import org.jivesoftware.smack.PacketCollector;
import org.jivesoftware.smack.SmackConfiguration;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.filter.AndFilter;
import org.jivesoftware.smack.filter.PacketFilter;
import org.jivesoftware.smack.filter.PacketIDFilter;
import org.jivesoftware.smack.filter.PacketTypeFilter;
import org.jivesoftware.smack.packet.IQ;
import org.jivesoftware.smack.packet.Packet;
import org.jivesoftware.smackx.packet.VCard;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

public class ChangeHeadActivity extends AppCompatActivity {
    private final String IMAGE_TYPE = "image/*";
    private final int IMAGE_CODE = 0;
    byte[] image ;
    Bitmap bitmap;
    private Button add_profile_button;
    XMPPConnection connection;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_change_head);
        add_profile_button = (Button)findViewById(R.id.add_profile_button);
        add_profile_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                setImage();
            }
        });
        connection = XmppConnection.getConnection();
    }





    public  void changeImage()throws XMPPException , IOException{

        VCard vcard = new VCard();
        vcard.load(connection);

        byte[] bytes;
        //bytes = getFileBytes(f);
        bytes = image;
        byte [] encode = Base64.encode(bytes,Base64.DEFAULT);
        String encodeImage = new String(encode);
        vcard.setAvatar(bytes, encodeImage);
        vcard.setField("PHOTO", "<TYPE>image/jpg</TYPE><BINVAL>"
                + encodeImage + "</BINVAL>", true);
        ByteArrayInputStream bais = new ByteArrayInputStream(vcard.getAvatar());
        FormatTools.getInstance().InputStreamToBitmap(bais);

        vcard.save(connection);
    }

    private static byte[] getFileBytes(File file) throws IOException{
        BufferedInputStream bis = null;
        try{
            bis = new BufferedInputStream(new FileInputStream(file));
            int bytes = (int)file.length();
            byte[] buffer = new byte[bytes];
            int readBytes = bis.read(buffer);
            if(readBytes != buffer.length){
                throw new IOException("Entire file not read");
            }
            return buffer;
        }finally{
            if(bis != null){
                bis.close();
            }
        }
    }

    private void setImage(){
        Intent getAlbum = new Intent(Intent.ACTION_GET_CONTENT);
        getAlbum.setType(IMAGE_TYPE);
        startActivityForResult(getAlbum, IMAGE_CODE);
    }

    @Override
    protected void onActivityResult(int requestCode,int resultCode,Intent data){
        //使用者按下確定後
        if(resultCode == RESULT_OK){
            //取得圖檔的路徑位置
            Uri uri = data.getData();
            Log.e("uri", uri.toString());

            ContentResolver cr = this.getContentResolver();
            try {
                //由抽資料接口轉換圖檔路徑為Bitmap
                bitmap = BitmapFactory.decodeStream(cr.openInputStream(uri));
                FormatTools format = new FormatTools();
                image = format.BitmapToBytes(bitmap);
            }catch(FileNotFoundException e){
                Log.e("Exception", e.getMessage(),e);
            }
            try{
                changeImage();
            }catch(XMPPException e){
                e.printStackTrace();
            }catch (IOException e){
                e.printStackTrace();
            }

        }
        super.onActivityResult(requestCode, resultCode, data);
    }


}
