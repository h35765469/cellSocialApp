package com.example.user.chatsystem1;

import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.media.Image;
import android.provider.ContactsContract;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.SimpleAdapter;

import com.example.user.chatsystem1.FormatTools.FormatTools;
import com.example.user.chatsystem1.fragment.ChatActivity;

import org.jivesoftware.smack.Roster;
import org.jivesoftware.smack.RosterEntry;
import org.jivesoftware.smack.RosterGroup;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.provider.ProviderManager;
import org.jivesoftware.smackx.packet.VCard;

import java.io.ByteArrayInputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

public class FriendListActivity extends AppCompatActivity {
    ListView friendlist;
    Drawable imageicon;
    Drawable Profile_imageicon;
    Button Back_button;
    ImageView Profile_picture;
    String my_profile;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_friend_list);
        XMPPConnection connection = XmppConnection.getConnection();
        friendlist = (ListView)findViewById(R.id.friendlist1);
        Back_button = (Button)findViewById(R.id.Back_button);
        Profile_picture = (ImageView)findViewById(R.id.Profile_picture);
        Bundle bundle = this.getIntent().getExtras();
        my_profile = bundle.getString("Username") + "@" + connection.getServiceName();
        Profile_imageicon = getUserImage(my_profile);
        Profile_picture.setImageDrawable(Profile_imageicon);
        Back_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        friendlist();
    }

    //好友列表(可用)
    public void friendlist(){
        XMPPConnection connection = XmppConnection.getConnection();
        HashMap<String,Object>friends = null;
        List<HashMap<String,Object>>Flist = new ArrayList<HashMap<String, Object>>();
        Roster roster = connection.getRoster();
        System.out.println("fuck" + roster.getEntries().size());
        Iterator<RosterEntry> iter = roster.getEntries().iterator();
        while(iter.hasNext()){
            RosterEntry entry = iter.next();
            System.out.println("fuck as hole" + entry.getUser());
            friends = new HashMap<String,Object>();
            imageicon = getUserImage(entry.getUser());
            if(imageicon == null){
                friends.put("ImageIcon" ,R.drawable.test);
            }else{
                friends.put("ImageIcon",imageicon);
            }
            String[] getUserSplit = entry.getUser().split("@");
            friends.put("FriendList", getUserSplit[0]);
            Flist.add(friends);
        }

        SimpleAdapter adapter = new SimpleAdapter(this,Flist,R.layout.friendlist,new String[]{"FriendList","ImageIcon"},
                new int[]{R.id.title ,  R.id.image2}
                );
        friendlist.setAdapter(adapter);

        //SimpleAdapter只能為控制元件搭配drawable目錄下的圖片即R.drawable.xx
        //為了獲取我們從服務器Drawable類型圖片 , 必須使用ViewBinder

        adapter.setViewBinder(new SimpleAdapter.ViewBinder() {
            @Override
            public boolean setViewValue(View view, Object data, String textRepresentation) {
                if(view instanceof ImageView && data instanceof  Drawable){
                    ImageView iv = (ImageView)view;
                    iv.setImageDrawable((Drawable)data);
                    return true;
                }
                return false;
            }
        });

        friendlist.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                XMPPConnection connection = XmppConnection.getConnection();
                HashMap<String, String> friendmap = (HashMap<String, String>) friendlist.getItemAtPosition(position);
                final String friendname = friendmap.get("FriendList");
                Bundle bundle = getIntent().getExtras();
                bundle.putString("friendname", friendname);
                bundle.putString("UserID" , friendname + "@" + connection.getServiceName());
                Intent it = new Intent();
                it.setClass(FriendListActivity.this, ChatActivity.class);
                it.putExtras(bundle);
                startActivity(it);

            }
        });
    }

    //獲取用戶頭像
    public Drawable getUserImage(String user){
        ByteArrayInputStream bais = null;
        XMPPConnection connection = XmppConnection.getConnection();
        try{
            VCard vcard = new VCard();
            ProviderManager.getInstance().addIQProvider("vCard", "vcard-temp", new org.jivesoftware.smackx.provider.VCardProvider());
            if (user.equals("") || user == null || user.trim().length() <= 0) {
                return null;
            }
            vcard.load(connection,user);
            if(vcard == null || vcard.getAvatar() == null)
                return null;
            bais = new ByteArrayInputStream(vcard.getAvatar());
        }catch(Exception e){
            e.printStackTrace();
            return null;
        }
        return FormatTools.getInstance().InputStreamToDrawable(bais);
    }


}


