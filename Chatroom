package com.example.user.chatsystem1;

import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.ChatManager;
import org.jivesoftware.smack.MessageListener;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.packet.Message;
import org.w3c.dom.Text;

public class Chatroom extends AppCompatActivity {
    Button send , backfriendlist;
    EditText sendcontent;
    TextView chatcontent;
    String string = null;
    String string2 = null;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chatroom);
        send = (Button)findViewById(R.id.send);
        sendcontent = (EditText)findViewById(R.id.sendcontent);
        chatcontent = (TextView)findViewById(R.id.chatcontent);
        backfriendlist = (Button)findViewById(R.id.backfriendlist);

        Bundle bundle = this.getIntent().getExtras();
        final String username = bundle.getString("friend");
        final String ownusername = bundle.getString("Username");
        send.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Message(username , ownusername);
            }
        });
        backfriendlist.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        acceptmessage(username);

    }

    //傳訊息(可用)
    public void Message(String username , String ownusername){
        XMPPConnection connection = XmppConnection.getConnection();
        Message message = new Message();//建立訊息物件
        message.setTo(username);//要傳送對象
        message.setFrom(ownusername);//訊息傳送者
        string = sendcontent.getText().toString();
        message.setBody(string);//傳送訊息
        message.setType(Message.Type.chat);//訊息型態
        connection.sendPacket(message);

    }

    //接收訊息(可用)
    public void acceptmessage(String username){
        XMPPConnection connection = XmppConnection.getConnection();
        ChatManager chatmanager = connection.getChatManager();
        Chat newchat = chatmanager.createChat(username, new MessageListener() {
            @Override
            public void processMessage(Chat chat, Message message) {
                if(message.getBody() !=null){
                    System.out.println("Received from[" + message.getFrom() + "] message:" + message.getBody());
                }
                android.os.Message msg1 = new android.os.Message();
                Bundle b = new Bundle();
                b.putString("MSG", message.getBody());
                msg1.setData(b);
                handler.sendMessage(msg1);
            }
        });
    }


    Handler handler = new Handler(){
        public void handleMessage(android.os.Message msg){
            super.handleMessage(msg);
            Bundle b = msg.getData();
            string2 += b.getString("MSG") + "\n";
            chatcontent.setText(string2);
        };
    };

}
