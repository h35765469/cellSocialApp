package com.example.user.chatsystem1.fragment;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.example.user.chatsystem1.R;
import com.example.user.chatsystem1.XmppConnection;

import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.ChatManagerListener;
import org.jivesoftware.smack.MessageListener;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.packet.Message;



import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;



public class ChatActivity extends AppCompatActivity {
    private TextView text_chat,text_title;
    private EditText edit_chat;
    private ImageView img_send;
    private Drawable img_userDrawable,img_friendDrawable;
    private XMPPConnection connection = XmppConnection.getConnection();
    private String str_text,name,password,friend,sendMsg ,friendname;
    private ChatHandler handler;
    private SimpleDateFormat sf = new SimpleDateFormat("HH:mm");

    private ArrayList<HashMap<String, Object>> chatList = new ArrayList<HashMap<String,Object>>();
    String[] from = {"img","text"};
    int[] to = {R.id.img_me,R.id.text_me,R.id.img_friend,R.id.text_friend};
    int[] item_layout = {R.layout.my_message_item,R.layout.friend_message_item};
    private ListView listview_chat;
    private MyAdapter myAdapter;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chat);
        img_send = (ImageView) findViewById(R.id.img_send);
        edit_chat = (EditText) findViewById(R.id.edit_chat);
        listview_chat = (ListView) findViewById(R.id.listview_chat);
        text_title = (TextView) findViewById(R.id.text_title);

        myAdapter = new MyAdapter(this, chatList, item_layout, from, to);

        //獲取Fragment傳來的值
        //name = getIntent().getStringExtra("name");
        //password = getIntent().getStringExtra("password");
        Bundle bundle = this.getIntent().getExtras();
        friend = bundle.getString("friend");
        friendname = bundle.getString("name");
        text_title.setText(friend);
        /*try {
            connection.login(name, password);
        } catch (XMPPException e) {
            e.printStackTrace();
        }*/
        img_userDrawable = new FriendFragment().getUserImage (friendname,connection);
        img_friendDrawable = new FriendFragment().getUserImage( friend,connection);

        img_send.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View arg0) {
                sendMsg = edit_chat.getText().toString();

                Chat chat = connection.getChatManager().createChat(friend+"@"+ connection.getServiceName(), null);
                try {
                    chat.sendMessage(sendMsg);
                } catch (XMPPException e) {
                    e.printStackTrace();
                }

                edit_chat.setText(null);

                addChatToListview(0, sendMsg);

                //将ListView设置为置底显示，自动刷新UI，使得消息及时显示
                listview_chat.setAdapter(myAdapter);
                listview_chat.setSelection(myAdapter.getCount()-1);
            }
        });

        //監聽用戶收到消息
        Thread thread = new Thread(new Runnable(){
            @Override
            public void run(){
                //接收用戶傳來消息
                connection.getChatManager().addChatListener(new ChatManagerListener() {
                    @Override
                    public void chatCreated(Chat chat, boolean b) {
                        chat.addMessageListener(new MessageListener(){

                            @Override
                            public void processMessage(Chat chat , Message msg){
                                friend = msg.getFrom();
                                friend = friend.substring(0,friend.indexOf("@"));
                                android.os.Message m = new android.os.Message();
                                if(msg.getBody()!=null){
                                    Bundle b = new Bundle();
                                    b.putString("msg",msg.getBody());
                                    b.putString("friend",friend);
                                    m.setData(b);
                                    handler.sendMessage(m);
                                }
                            }
                        });
                    }
                });
            }
        });
        thread.start();
        handler = new ChatHandler();
    }

    public class ChatHandler extends Handler {
        @Override
        public void handleMessage(android.os.Message msg) {
            super.handleMessage(msg);

            Bundle b = msg.getData();
            String ChatHandler = b.getString("msg");
            String friend = b.getString("friend");

            text_title.setText(friend);
            addChatToListview(1, ChatHandler);

            //将ListView设置为置底显示，自动刷新UI，使得消息及时显示
            listview_chat.setAdapter(myAdapter);
            listview_chat.setSelection(myAdapter.getCount()-1);

        }
    }

    public void addChatToListview(int who,String chat){
        HashMap<String,Object> map = new HashMap<String,Object>();
        map.put("who", who);
        map.put("img", who==0?R.drawable.mymessage:R.drawable.friendmessage);
        map.put("chat", chat);
        chatList.add(map);
    }

    public class MyAdapter extends BaseAdapter {
        Context context;
        ArrayList<HashMap<String,Object>> chatList= null;
        int[] layout;
        String[] from;
        int[] to;
        LayoutInflater listcontainer;

        public MyAdapter(Context context,
                         ArrayList<HashMap<String, Object>> chatList, int[] layout,
                         String[] from, int[] to){

            super();
            this.context = context;
            listcontainer = LayoutInflater.from(context);
            this.chatList = chatList;
            this.layout = layout;
            this.from = from;
            this.to = to;
        }

        @Override
        public int getCount() {
            return chatList.size();
        }

        @Override
        public Object getItem(int arg0) {
            return null;
        }

        @Override
        public long getItemId(int ItemId) {
            return ItemId;
        }


        @Override
        public View getView(int item, View view, ViewGroup parent) {
            //獲取當前who is call
            int who = (Integer)chatList.get(item).get("who");
            String msg = (String)chatList.get(item).get("chat");
            //根据who设置当前子项的布局和文本，0为自己发送的布局，1为好友发送的布局
            if(who==0)
            {
                view=listcontainer.inflate(R.layout.my_message_item, null);
                ((TextView)view.findViewById(R.id.text_me)).setText(msg);
                ((ImageView)view.findViewById(R.id.img_me)).setImageDrawable(img_userDrawable);
                return view;
            }
            else
            {
                view=listcontainer.inflate(R.layout.friend_message_item, null);
                ((TextView)view.findViewById(R.id.text_friend)).setText(msg);
                ((ImageView)view.findViewById(R.id.img_friend)).setImageDrawable(img_friendDrawable);
                return view;
            }
        }

    }
}
